package com.kemean.controller.admin;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.kemean.constant.KemeanConstant;
import com.kemean.controller.KemeanBaseController;
import com.kemean.service.admin.AdminPlatformService;
import com.kemean.vo.bo.KemeanPageAdminBO;
import com.kemean.vo.bo.admin.AdminChartBO;
import com.kemean.vo.bo.admin.platform.AdminQuestionUserBO;
import com.kemean.vo.bo.admin.platform.AdminPlatformWorkBO;
import com.kemean.vo.bo.admin.platform.AdminPromotionBO;
import com.kemean.vo.po.admin.AdminChartPO;
import com.kemean.vo.po.admin.platform.AdminInvestQuestionUserPO;
import com.kemean.vo.po.admin.platform.AdminPromotionPO;

/**
 * 平台管理
 * 
 * @Date 2018年7月9日
 *
 * @company 深圳科名网络有限公司 {@link www.kemean.com}
 */
@Controller
@RequestMapping("admin/platform")
public class AdminPlatformController extends KemeanBaseController {

	@Autowired
	private AdminPlatformService adminPlatformService;

	/**
	 * 平台总销售额 page
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月9日
	 */

	@RequestMapping(value = "sale_chart", method = RequestMethod.GET)
	public String platformSaleChart(@Valid AdminChartPO adminChartPO) {
		request.setAttribute("pageData", adminPlatformService.platformSaleData(adminChartPO, 15));
		return KemeanConstant.ADMIN_FOLDER + "platformSaleChart";

	}

	/**
	 * 平台总销售额 data
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月9日
	 */
	@ResponseBody
	@RequestMapping(value = "sale_data", method = RequestMethod.GET)
	public List<AdminChartBO> platformSaleData(@Valid AdminChartPO adminChartPO) {
		return adminPlatformService.platformSaleData(adminChartPO, 0);
	}

	/**
	 * 平台四个促销活动(限时折扣)
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月9日
	 */

	@RequestMapping(value = "discount_page", method = RequestMethod.GET)
	public String platformDiscountPage() {
		return KemeanConstant.ADMIN_FOLDER + "platformDiscount";
	}

	/**
	 * 平台四个促销活动(亏本走量)
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月9日
	 */

	@RequestMapping(value = "loss_money_page", method = RequestMethod.GET)
	public String platformLossMoneyPage() {
		return KemeanConstant.ADMIN_FOLDER + "platformLossMoney";
	}

	/**
	 * 平台四个促销活动(9.9包邮)
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月9日
	 */

	@RequestMapping(value = "postage_page", method = RequestMethod.GET)
	public String platformPostagePage() {
		return KemeanConstant.ADMIN_FOLDER + "platformPostage";
	}

	/**
	 * 平台四个促销活动(名牌折扣)
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月9日
	 */

	@RequestMapping(value = "famous_page", method = RequestMethod.GET)
	public String platformFamousPage() {
		return KemeanConstant.ADMIN_FOLDER + "platformFamous";
	}

	/**
	 * 平台四个促销活动 data
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月11日
	 */
	@ResponseBody
	@RequestMapping(value = "promotion_data", method = RequestMethod.GET)
	public KemeanPageAdminBO<List<AdminPromotionBO>> platformPromotionData(@Valid AdminPromotionPO adminPromotionPO) {
		return adminPlatformService.platformPromotionData(adminPromotionPO);
	}

	/**
	 * 平台精准推广（问卷调查用户）列表page
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月9日
	 */

	@RequestMapping(value = "question_user_page", method = RequestMethod.GET)
	public String platformQuestionUserPage() {
		return KemeanConstant.ADMIN_FOLDER + "platformQuestionUser";
	}

	/**
	 * 
	 * 平台精准推广（问卷调查用户）列表
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月12日
	 */
	@ResponseBody
	@RequestMapping(value = "question_user_data", method = RequestMethod.GET)
	public KemeanPageAdminBO<List<AdminQuestionUserBO>> platformQuestionUserData(
			@Valid AdminInvestQuestionUserPO adminInvestQuestionUserPO) {
		return adminPlatformService.platformQuestionUserData(adminInvestQuestionUserPO);
	}

	/**
	 * 平台管理员工作报表
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月12日
	 */

	@RequestMapping(value = "work_page", method = RequestMethod.GET)
	public String platformWorkPage(@Valid AdminChartPO adminChartPO) {
		request.setAttribute("pageData", adminPlatformService.platformWorkCount(adminChartPO, getLoginAdminUser(), 15));
		return KemeanConstant.ADMIN_FOLDER + "platformWork";
	}

	/**
	 * 平台管理员工作报表
	 * 
	 * @author tanggengxiang
	 * @date 2018年7月12日
	 */
	@ResponseBody
	@RequestMapping(value = "work_data", method = RequestMethod.GET)
	public AdminPlatformWorkBO platformQuestionUserData(@Valid AdminChartPO adminChartPO) {
		return adminPlatformService.platformWorkCount(adminChartPO, getLoginAdminUser(), 0);
	}
}
