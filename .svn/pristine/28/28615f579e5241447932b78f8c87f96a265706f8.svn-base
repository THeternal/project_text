package com.kemean.service.consumer;

import java.util.Date;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.kemean.bean.DaikenOrder;
import com.kemean.constant.KemeanConstant;
import com.kemean.constant.KemeanOrderEnum;
import com.kemean.constant.KemeanPayTypeEnum;
import com.kemean.constant.PayWxTradeTypeEnum;
import com.kemean.dao.DaikenOrderDao;
import com.kemean.exception.KemeanException;
import com.kemean.service.PayWxService;
import com.kemean.util.DaikenUtil;
import com.kemean.util.KemeanUtilAid;
import com.kemean.vo.bo.KemeanResult;
import com.kemean.vo.po.PaySignWxPO;
import com.kemean.vo.po.c.oder.GetPaidOrderPO;

@Service
public class PayService {

	/** 回调地址 **/
	private static final String NOTIFY_URL = "/api/c/pay/pay_callback_wx";

	// TODO 需要更改 /** 应用ID **/
	private static final String APP_ID = "wxf980f7a002905929";
	// TODO 需要更改/** 商户号 **/
	private static final String MCH_ID = "1501926651";
	// TODO 需要更改/** 商户平台设置的密钥key **/
	private static final String KEY = "dushiyun13360901517sg13360901517";

	@Autowired
	private DaikenOrderDao daikenOrderDao;

	@Autowired
	private PayWxService wxPayService;

	/**
	 * 微信支付签名
	 * 
	 * @author huangyujian
	 * @date 2018年4月4日
	 */
	@Transactional
	public KemeanResult<Map<String, String>> paySignWx(GetPaidOrderPO getPaidOrderPO, HttpServletRequest request) {
		Date now = new Date();
		PaySignWxPO wxPo = new PaySignWxPO();
		wxPo.setBody("代研订单");
		wxPo.setAppId(APP_ID);
		wxPo.setMchId(MCH_ID);
		wxPo.setKey(KEY);
		wxPo.setNotifyUrl(DaikenUtil.getServiceVisitPath(request) + NOTIFY_URL);
		// TODO 设置成APP支付
		wxPo.setTradeType(PayWxTradeTypeEnum.APP);
		if (getPaidOrderPO.getOrderNos().size() == 1) {
			DaikenOrder dbOrder = daikenOrderDao.selectUniqueEntityByProperties(
					new String[] { KemeanConstant.DATA_DELETED, "orderNo" },
					new Object[] { false, getPaidOrderPO.getOrderNos().get(0) });
			if (!KemeanOrderEnum.OrderStatusUser.NEW_WIAT_PAY.getStatus().equals(dbOrder.getStatusUser())) {
				return new KemeanResult<>(false, "订单信息错误");
			}
			dbOrder.setPayType(KemeanPayTypeEnum.WX_PAY.getType());
			dbOrder.setPayReqTime(now);
			dbOrder.setUpdateTime(now);
			daikenOrderDao.updateByPrimaryKeySelective(dbOrder);
			wxPo.setOrderNo(getPaidOrderPO.getOrderNos().get(0));
			wxPo.setPayPrice(dbOrder.getPricePay());
			return new KemeanResult<Map<String, String>>(wxPayService.unifiedorder(wxPo, false));
		}

		// 组合订单编号
		String orderNoGroup = "g" + KemeanUtilAid.getOrderNo(now);
		double payPrice = 0.0;
		for (String item : getPaidOrderPO.getOrderNos()) {
			DaikenOrder dbOrder = daikenOrderDao.selectUniqueEntityByProperties(
					new String[] { KemeanConstant.DATA_DELETED, "orderNo" }, new Object[] { false, item });
			if (!KemeanOrderEnum.OrderStatusUser.NEW_WIAT_PAY.getStatus().equals(dbOrder.getStatusUser())) {
				throw new KemeanException("订单信息错误");
			}
			dbOrder.setOrderNoGroup(orderNoGroup);
			payPrice += dbOrder.getPricePay();
			dbOrder.setPayType(KemeanPayTypeEnum.WX_PAY.getType());
			dbOrder.setPayReqTime(now);
			dbOrder.setUpdateTime(now);
			daikenOrderDao.updateByPrimaryKeySelective(dbOrder);
			wxPo.setOrderNo(orderNoGroup);
			wxPo.setPayPrice(payPrice);
		}
		return new KemeanResult<Map<String, String>>(wxPayService.unifiedorder(wxPo, false));
	}
}
